trigger:
- main

# Variaveis 
variables:
  solution: 'back/WK_Doador.sln' 
  buildConfiguration: 'Release'

#Build.
stages:
- stage: Build
  displayName: 'Compilar e Testar o projeto'
  jobs:
  - job: BuildJob
    displayName: 'Build, Test and Publish'
    pool:
      vmImage: 'ubuntu-latest' 
    steps:
    
    #versão do .NET SDK 
    - task: UseDotNet@2
      displayName: 'Usar .NET 7.0.x'
      inputs:
        packageType: 'sdk'
        version: '7.0.x'

    # Restaura dependências 
    - task: DotNetCoreCLI@2
      displayName: 'Restaurar dependências'
      inputs:
        command: 'restore'
        projects: '$(solution)' 

    # Compila o projeto
    - task: DotNetCoreCLI@2
      displayName: 'Compilar a solution'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)' 

    # testes unitários
    - task: DotNetCoreCLI@2
      displayName: 'Executar testes unitários'
      inputs:
        command: 'test'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration) --no-build'
        publishTestResults: true 

    #Publica o artefato da API
    - task: DotNetCoreCLI@2
      displayName: 'Publicar projeto da API'
      inputs:
        command: 'publish'
        publishWebProjects: false 
        projects: 'back/src/WK.Api/WK.Api.csproj' 
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true 

    # Publica o arquivo .zip 
    - task: PublishBuildArtifacts@1
      displayName: 'Publicar Artefato para o Deploy'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop' 
        publishLocation: 'Container'
